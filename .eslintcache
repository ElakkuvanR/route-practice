[{"D:\\Learning\\React\\route-practice\\src\\index.js":"1","D:\\Learning\\React\\route-practice\\src\\App.js":"2","D:\\Learning\\React\\route-practice\\src\\pages\\AllQuotes.js":"3","D:\\Learning\\React\\route-practice\\src\\pages\\QuoteDetail.js":"4","D:\\Learning\\React\\route-practice\\src\\pages\\NewQuote.js":"5","D:\\Learning\\React\\route-practice\\src\\components\\comments\\Comments.js":"6","D:\\Learning\\React\\route-practice\\src\\components\\comments\\NewCommentForm.js":"7","D:\\Learning\\React\\route-practice\\src\\components\\layout\\Layout.js":"8","D:\\Learning\\React\\route-practice\\src\\components\\layout\\MainNavigation.js":"9","D:\\Learning\\React\\route-practice\\src\\components\\quotes\\QuoteList.js":"10","D:\\Learning\\React\\route-practice\\src\\components\\quotes\\QuoteItem.js":"11","D:\\Learning\\React\\route-practice\\src\\components\\quotes\\QuoteForm.js":"12","D:\\Learning\\React\\route-practice\\src\\components\\UI\\Card.js":"13","D:\\Learning\\React\\route-practice\\src\\components\\UI\\LoadingSpinner.js":"14","D:\\Learning\\React\\route-practice\\src\\components\\quotes\\HighlightedQuote.js":"15","D:\\Learning\\React\\route-practice\\src\\pages\\NotFound.js":"16","D:\\Learning\\React\\route-practice\\src\\hooks\\use-http.js":"17","D:\\Learning\\React\\route-practice\\src\\lib\\api.js":"18","D:\\Learning\\React\\route-practice\\src\\components\\quotes\\NoQuotesFound.js":"19","D:\\Learning\\React\\route-practice\\src\\components\\comments\\CommentsList.js":"20","D:\\Learning\\React\\route-practice\\src\\components\\comments\\CommentItem.js":"21"},{"size":271,"mtime":1656540535286,"results":"22","hashOfConfig":"23"},{"size":1203,"mtime":1656884185656,"results":"24","hashOfConfig":"23"},{"size":1244,"mtime":1656625702556,"results":"25","hashOfConfig":"23"},{"size":2055,"mtime":1656626193630,"results":"26","hashOfConfig":"23"},{"size":697,"mtime":1656625228676,"results":"27","hashOfConfig":"23"},{"size":1808,"mtime":1656627627104,"results":"28","hashOfConfig":"23"},{"size":1462,"mtime":1656627460622,"results":"29","hashOfConfig":"23"},{"size":338,"mtime":1656541897468,"results":"30","hashOfConfig":"23"},{"size":679,"mtime":1656541677345,"results":"31","hashOfConfig":"23"},{"size":1375,"mtime":1656624592373,"results":"32","hashOfConfig":"23"},{"size":455,"mtime":1656621168366,"results":"33","hashOfConfig":"23"},{"size":1883,"mtime":1656622565857,"results":"34","hashOfConfig":"23"},{"size":156,"mtime":1656539872005,"results":"35","hashOfConfig":"23"},{"size":167,"mtime":1656539871910,"results":"36","hashOfConfig":"23"},{"size":270,"mtime":1656539872495,"results":"37","hashOfConfig":"23"},{"size":152,"mtime":1656621737242,"results":"38","hashOfConfig":"23"},{"size":1212,"mtime":1656624651441,"results":"39","hashOfConfig":"23"},{"size":2158,"mtime":1656624803141,"results":"40","hashOfConfig":"23"},{"size":331,"mtime":1656625818270,"results":"41","hashOfConfig":"23"},{"size":334,"mtime":1656539872189,"results":"42","hashOfConfig":"23"},{"size":200,"mtime":1656539872118,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1qcoxk2",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\Learning\\React\\route-practice\\src\\index.js",[],["90","91"],"D:\\Learning\\React\\route-practice\\src\\App.js",[],"D:\\Learning\\React\\route-practice\\src\\pages\\AllQuotes.js",["92"],"import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nconst DUMMY_QUOTES = [\r\n  {\r\n    id: \"q1\",\r\n    author: \"Max\",\r\n    text: \"Learning React is Fun\",\r\n  },\r\n  {\r\n    id: \"q2\",\r\n    author: \"Elakk\",\r\n    text: \"Sitecore learning is also Fun\",\r\n  },\r\n  {\r\n    id: \"q3\",\r\n    author: \"Jea\",\r\n    text: \"Learning is Fun\",\r\n  },\r\n];\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner></LoadingSpinner>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound></NoQuotesFound>;\r\n  }\r\n  return <QuoteList quotes={loadedQuotes}></QuoteList>;\r\n};\r\n\r\nexport default AllQuotes;\r\n","D:\\Learning\\React\\route-practice\\src\\pages\\QuoteDetail.js",["93"],"import { Fragment, useEffect } from \"react\";\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nconst DUMMY_QUOTES = [\r\n  {\r\n    id: \"q1\",\r\n    author: \"Max\",\r\n    text: \"Learning React is Fun\",\r\n  },\r\n  {\r\n    id: \"q2\",\r\n    author: \"Elakk\",\r\n    text: \"Sitecore learning is also Fun\",\r\n  },\r\n  {\r\n    id: \"q3\",\r\n    author: \"Jea\",\r\n    text: \"Learning is Fun\",\r\n  },\r\n];\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n  const { quoteId } = params;\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner></LoadingSpinner>\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <NoQuotesFound></NoQuotesFound>;\r\n  }\r\n  // const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n  // if (!quote) {\r\n  //   return <p>No Quoto Found</p>;\r\n  // }\r\n  return (\r\n    <Fragment>\r\n      {\" \"}\r\n      <HighlightedQuote\r\n        text={loadedQuote.text}\r\n        author={loadedQuote.author}\r\n      ></HighlightedQuote>\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments></Comments>\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","D:\\Learning\\React\\route-practice\\src\\pages\\NewQuote.js",[],"D:\\Learning\\React\\route-practice\\src\\components\\comments\\Comments.js",[],"D:\\Learning\\React\\route-practice\\src\\components\\comments\\NewCommentForm.js",["94"],"import { useRef, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    sendRequest({\n      commentData: { text: enteredText },\n      quoteId: props.quoteId,\n    });\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner></LoadingSpinner>\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","D:\\Learning\\React\\route-practice\\src\\components\\layout\\Layout.js",[],"D:\\Learning\\React\\route-practice\\src\\components\\layout\\MainNavigation.js",[],"D:\\Learning\\React\\route-practice\\src\\components\\quotes\\QuoteList.js",[],"D:\\Learning\\React\\route-practice\\src\\components\\quotes\\QuoteItem.js",[],"D:\\Learning\\React\\route-practice\\src\\components\\quotes\\QuoteForm.js",[],"D:\\Learning\\React\\route-practice\\src\\components\\UI\\Card.js",[],"D:\\Learning\\React\\route-practice\\src\\components\\UI\\LoadingSpinner.js",[],"D:\\Learning\\React\\route-practice\\src\\components\\quotes\\HighlightedQuote.js",[],"D:\\Learning\\React\\route-practice\\src\\pages\\NotFound.js",[],"D:\\Learning\\React\\route-practice\\src\\hooks\\use-http.js",[],"D:\\Learning\\React\\route-practice\\src\\lib\\api.js",[],"D:\\Learning\\React\\route-practice\\src\\components\\quotes\\NoQuotesFound.js",[],"D:\\Learning\\React\\route-practice\\src\\components\\comments\\CommentsList.js",[],"D:\\Learning\\React\\route-practice\\src\\components\\comments\\CommentItem.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":7,"column":7,"nodeType":"101","messageId":"102","endLine":7,"endColumn":19},{"ruleId":"99","severity":1,"message":"100","line":9,"column":7,"nodeType":"101","messageId":"102","endLine":9,"endColumn":19},{"ruleId":"99","severity":1,"message":"103","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":19},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'DUMMY_QUOTES' is assigned a value but never used.","Identifier","unusedVar","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation"]